for (std::size_t i = 0; i < numVertices - 1; i++) {
    for (std::size_t u = 0; u < numVertices; u++) {
        for (std::size_t v = 0; v < numVertices; v++) {
            if (g[u][v] != 0 && g[u][v] != std::numeric_limits<int>::max() &&
                distances[u] + g[u][v] < distances[v]) {
                distances[v] = distances[u] + g[u][v];
                predecessor[v] = u;
            }
        }
    }
}

