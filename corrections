bool ariel::Algorithms::findCycle(ariel::Graph& g, std::size_t v, std::vector<bool>& visited, std::vector<int>& parent)
{
    visited[v] = true;
    for (std::size_t i = 0; i < g.size(); i++) {
        if (g[v][i] != 0) {  // There is an edge from v to i
            if (!visited[i]) {
                parent[i] = v;
                if (findCycle(g, i, visited, parent)) {
                    return true;
                }
            } else if (i != parent[v]) {  // Check if i is not the parent of v
                return true;
            }
        }
    }
    return false;
}
